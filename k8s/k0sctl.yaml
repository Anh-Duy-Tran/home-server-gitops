apiVersion: k0sctl.k0sproject.io/v1beta1
kind: Cluster
metadata:
  name: k0s-cluster
  user: admin
spec:
  hosts:
    - role: single
      ssh:
        address: 192.168.50.240
        user: duytran
        port: 22
        keyPath: ~/.ssh/id_rsa
      installFlags:
        - --debug
      hooks:
        # Comment this out if the target host doesn't have firewall problem
        apply:
          before:
            - sudo iptables-restore < /etc/iptables/iptables.rules
      files:
        - name: metallb-ipaddresspool
          src: ./metallb/IPAddressPool.yaml
          dstDir: /var/lib/k0s/manifests/metallb/
          perm: 0644
        - name: cloudflare-tunnel-secrets
          src: ./cloudflare-tunnel/cloudflare-tunnel.secrets.yaml
          dstDir: /var/lib/k0s/manifests/cloudflare-tunnel/
          perm: 0644
  k0s:
    config:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: Cluster
      metadata:
        name: k0s
      spec:
        extensions:
          helm:
            concurrencyLevel: 5
            repositories:
              - name: traefik
                url: https://traefik.github.io/charts
              - name: metallb
                url: https://metallb.github.io/metallb
              - name: openebs
                url: "https://openebs.github.io/charts"
              - name: argocd
                url: https://argoproj.github.io/argo-helm
              - name: cloudflare
                url: https://cloudflare.github.io/helm-charts
            charts:
              - name: metallb
                order: 1
                chartname: metallb/metallb
                version: 0.15.2
                namespace: metallb-system
              - name: traefik
                order: 2
                chartname: traefik/traefik
                version: 34.3.0
                namespace: traefik
                values: |
                  additionalArguments:
                    - --log.level=DEBUG
                    - --api
                    - --api.dashboard=true
                    - --api.insecure=true
                  providers:
                    kubernetesIngress:
                      publishedService:
                        enabled: true
              - name: openebs
                chartname: openebs/openebs
                version: 3.10.0
                namespace: openebs
                order: 1
                values: |
                  localprovisioner:
                    hostpathClass:
                      enabled: true
                      isDefaultClass: true
                    basePath: /var/openebs/local
              - name: argocd
                order: 3
                chartname: argocd/argo-cd
                version: 7.7.12
                namespace: argocd
                values: |
                  server:
                    service:
                      type: LoadBalancer
                  configs:
                    params:
                      server.insecure: true
              - name: cloudflare-tunnel
                order: 3
                chartname: cloudflare/cloudflare-tunnel
                version: 0.3.2
                namespace: cloudflare-tunnel
                values: |
                  cloudflare:
                    account: "228f7adda0389734d880eeb14f621c5a"
                    tunnelName: "super-cluster-tunnel"
                    tunnelId: "4a026bef-fd4f-46d4-9f1c-39fb5be523ca"
                    secretName: cloudflare-tunnel-secrets
                    enableWarp: false
                    ingress:
                      # ArgoCD Admin UI - Direct access
                      - hostname: argocd.duytran.app
                        service: http://argocd-server.argocd:80
                      # All other services - Route through Traefik ingress controller
                      - hostname: "*.duytran.app"
                        service: http://traefik.traefik:80
        api:
          k0sApiPort: 9443
          port: 6443
        installConfig:
          users:
            etcdUser: etcd
            kineUser: kube-apiserver
            konnectivityUser: konnectivity-server
            kubeAPIserverUser: kube-apiserver
            kubeSchedulerUser: kube-scheduler
        konnectivity:
          adminPort: 8133
          agentPort: 8132
        network:
          kubeProxy:
            disabled: false
            mode: iptables
          kuberouter:
            autoMTU: true
            mtu: 0
            peerRouterASNs: ""
            peerRouterIPs: ""
          podCIDR: 10.244.0.0/16
          provider: kuberouter
          serviceCIDR: 10.96.0.0/12
        podSecurityPolicy:
          defaultPolicy: 00-k0s-privileged
        storage:
          type: etcd
        telemetry:
          enabled: true
  options:
    wait:
      enabled: true
    drain:
      enabled: true
      gracePeriod: 2m0s
      timeout: 5m0s
      force: true
      ignoreDaemonSets: true
      deleteEmptyDirData: true
      podSelector: ""
      skipWaitForDeleteTimeout: 0s
    concurrency:
      limit: 30
      uploads: 5
    evictTaint:
      enabled: false
      taint: k0sctl.k0sproject.io/evict=true
      effect: NoExecute
      controllerWorkers: false
